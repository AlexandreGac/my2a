version: "3.6"
services:
  back:
    build:
      context: back
      dockerfile: Dockerfile
      target: development
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "$BACK_PORT:8000"
    volumes:
      - ./back:/src
      - ./backups:/backups
    networks:
      - nginx_link
      - cache_link
    env_file: .env
  redis:
    image: redis:7.2.2-bookworm
    command: redis-server --save 60 1 --loglevel notice --requirepass ${REDIS_PASSWORD}
    volumes:
      - cache:/data
    networks:
      - cache_link
    healthcheck:
        test: echo 'auth ${REDIS_PASSWORD}\nping' | redis-cli | grep PONG
        interval: 5s
        timeout: 3s
        retries: 5
  front:
    build:
      context: front
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./front:/app
    ports:
      - 3000:3000
    networks:
      - nginx_link
  nginx:
    build: 
      context: nginx
      dockerfile: Dockerfile
      target: development
    ports:
      - "127.0.0.1:80:80"
    networks:
      - nginx_link
    depends_on:
      - back
      - front
networks:
  nginx_link:
  cache_link:

volumes: 
  cache: