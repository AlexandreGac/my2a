import httpx
from selectolax.parser import HTMLParser
from dataclasses import dataclass
from rich import print
import re
from bs4 import BeautifulSoup

import json
import os


viewstate = {
  0 : "",

  1 : "",

  2 : "",

  3 : "",

  4 : "",

  5 : ""
  }


eventvalidation = {
  0 : "/wEW2gMC2trE9QsC7cqPfAKDsuu6BgLPze6dCwLE/evwCwLH/evwCwKN/P3BAQLOnc56Avq96skFAve93v4CAtjOwbEKAo38oaMNAq/duOcGAvq93vUMAve9qtkPAtjO5ZIGAo38hbgCAt7X7e8CAvq94poJAtjOyacLAo38yfIDAs64q9kJAvq99vcPAve9kuMOAtjOjeIMAo38jfwNAo7Q6b0HAvq9mt0HAtjO0esGAo388fwCAsvLr9UMAvq9zpUMAve9uu0NAtjOtewLAo381d8IAov+9qgCAvq90tEHAtjOmc8BAo38mZoKAs/syJYMAvq95tYEAtjO3YkDAvz/tOsEAqLbmv0NAunB8d8LArP3768GAvz/+KUGAunBheUIArP3s+oHAvz//KYJAr2p96oFAunB6a4NArP3t+sKAvz/oIgFAuauq7MOAunB3doEAubBqb4HArP328wGAvz/hJ0KAunB4X8Cs/e/4QsC/P/I1wsCvcT0igoC6cH13AcCs/eDnA0C/P+M4QUC/ZHlqQYC6cGZwg8Cs/fHpQcC/P/w4QoC4sOcvgQC6cHN+gMCs/erpgwC/P/URAKiwNGICwLpwdG2DwKz94+JAgL8/5j/AQLSuLHyBQLpweW7DAKz99PDAwLnseCMBgL5lu/tBALM4P7HDgKeqZvRBwLnsaTHBwL97f7uCALM4JLNCwKeqd+LCQLnsajICgKU5cubDALM4PYWAsng6ssNAp6p44wMAuexzKkGAt3DxaQGAszg6sIHAp6ph+4HAuexsL4LAuSHqaQIAszg7ucDAsngsokEAp6p64INAuex9PgMApSAqfoEAszggsUKAp6pr70OAuexuIIHAtTNuZoNAszgpqoCAp6p88YIAuexnIMMArn/8K4LAszg2uIGAsTMktgOAp6p18cNAuexgOYBAvn7pb4PAszg3p4CAp6pu6oDAuexxKADAv3StZcNAszg8qMPAvy8w+gOAp6p/+QEAqaYos4EApDt18IOArvand0PApmh95MMAqaY5ogGAsDll44GAr3ll44GArvaseIMArjardkMApmhu84NAqaY6okJAqu7tPAFAqi7tPAFArvalawBArjaieEOApmhv08CppiO6wQCtOeiyAoCseeiyAoCu9qJ2AgCuNrVuwsCmaHjsAwCppjy/wkCp7WU/w8Cu9qN/QQC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",

  1 : "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",

  2 : "/wEW0AMC65rMsgwC7cqPfAKDsuu6BgLPze6dCwLE/evwCwLH/evwCwKN/P3BAQL6verJBQLYzsGxCgKN/KGjDQL6vd71DAL+utepCwLYzuWSBgKN/IW4AgLe1+3vAgLb1+3vAgL6veKaCQL3vaa8CQLYzsmnCwKN/MnyAwL6vfb3DwLYzo3iDAKN/I38DQKO0Om9BwKL0Om9BwL6vZrdBwL3ve6dBgLYztHrBgKN/PH8AgLLy6/VDAL6vc6VDALYzrXsCwKN/NXfCAKL/vaoAgKI/vaoAgL6vdLRBwLapcODDwLYzpnPAQKN/JmaCgLP7MiWDAL6vebWBALYzt2JAwL8/7TrBAKi25r9DQLpwfHfCwKz9++vBgL8//ilBgLS0/qhCwLP0/qhCwLpwYXlCALmwYHcCAKz97PqBwL8//ymCQK9qfeqBQLpwemuDQKz97frCgL8/6CIBQLmrquzDgLpwd3aBALR+uWPCQKz99vMBgL8/4SdCgK5o9e5DwLpweF/ArP3v+ELAvz/yNcLAr3E9IoKArrE9IoKAunB9dwHArP3g5wNAvz/jOEFAv2R5akGAunBmcIPArP3x6UHAvz/8OEKAuLDnL4EAunBzfoDAubBudIFArP3q6YMAvz/1EQCosDRiAsC6cHRtg8C5sH1YwKz94+JAgL8/5j/AQLpweW7DAKz99PDAwLnseCMBgLM4P7HDgKeqZvRBwLnsaTHBwL97f7uCALM4JLNCwKeqd+LCQLnsajICgKU5cubDAKR5cubDALM4PYWAp6p44wMAuexzKkGAt3DxaQGAtrDxaQGAszg6sIHAp6ph+4HAuexsL4LAuSHqaQIAszg7ucDAsngsokEAp6p64INAuex9PgMApSAqfoEAszggsUKAp6pr70OAuexuIIHAszgpqoCAvP1o/wEAp6p88YIAuexnIMMArn/8K4LAszg2uIGAp6p18cNAuexgOYBAvn7pb4PAszg3p4CAsnggswDAp6pu6oDAuexxKADAv3StZcNAszg8qMPAp6p/+QEAqaYos4EApDt18IOAo3t18IOArvand0PArjawYoBApmh95MMAqaY5ogGAsDll44GAr3ll44GArvaseIMArjardkMApmhu84NAqaY6okJAqu7tPAFAqi7tPAFArvalawBArjaieEOApmhv08CppiO6wQCtOeiyAoC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",

  3 : "/wEW2gMCmPTZmwQC7cqPfAKDsuu6BgLPze6dCwLE/evwCwLH/evwCwKN/P3BAQLOnc56Avq96skFAtjOwbEKAo38oaMNAvq93vUMAtjO5ZIGAo38hbgCAvq94poJAtjOyacLAo38yfIDAvq99vcPAtjOjeIMAo38jfwNAo7Q6b0HAvq9mt0HAtjO0esGAo388fwCAsvLr9UMAvq9zpUMAtjOtewLAo381d8IAov+9qgCAvq90tEHAtjOmc8BAo38mZoKAs/syJYMAvq95tYEAtjO3YkDAvz/tOsEAqLbmv0NAunB8d8LArP3768GAvz/+KUGAtLT+qELAunBheUIArP3s+oHAvz//KYJAr2p96oFAunB6a4NAqj1oeQFArP3t+sKAvz/oIgFAuauq7MOAunB3doEArP328wGAvz/hJ0KArmj17kPAunB4X8Cs/e/4QsC/P/I1wsCvcT0igoC6cH13AcCs/eDnA0C/P+M4QUC/ZHlqQYC+pHlqQYC6cGZwg8C5sHtgg4Cs/fHpQcC/P/w4QoC4sOcvgQC38OcvgQC6cHN+gMC5sG50gUCs/erpgwC/P/URALpwdG2DwKz94+JAgL8/5j/AQLSuLHyBQLpweW7DAKz99PDAwLnseCMBgL5lu/tBALM4P7HDgKeqZvRBwLnsaTHBwL97f7uCALM4JLNCwKeqd+LCQLnsajICgKU5cubDALM4PYWAp6p44wMAuexzKkGAt3DxaQGAszg6sIHAp6ph+4HAuexsL4LAuSHqaQIAuGHqaQIAuKHqaQIAszg7ucDAsngsokEAp6p64INAuex9PgMApSAqfoEApGAqfoEAszggsUKAp6pr70OAuexuIIHAtTNuZoNAszgpqoCAp6p88YIAuexnIMMArn/8K4LAszg2uIGAsngxroIAp6p18cNAuexgOYBAvn7pb4PAszg3p4CAp6pu6oDAuexxKADAv3StZcNAszg8qMPAsng7poPAp6p/+QEAqaYos4EApDt18IOArvand0PArjawYoBApmh95MMAqaY5ogGAsDll44GAr3ll44GArvaseIMArjardkMApmhu84NAqaY6okJAqu7tPAFArvalawBArjaieEOApmhv08CppiO6wQCtOeiyAoCseeiyAoCu9qJ2AgCuNrVuwsCmaHjsAwCppjy/wkCp7WU/w8Cu9qN/QQC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",

  4 : "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",

  5 : "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"


  }

def get_module_info(code):
    client = httpx.Client()
    return client.get(f"https://gede.enpc.fr/Programme/Fiche.aspx?param=M:{code}").text

def clean_corrupted_text(text):
  """
  Cleans corrupted text containing \xa0 characters.

  Args:
    text: The corrupted text string.

  Returns:
    The cleaned text string.
  """
  # Replace \xa0 (non-breaking space) with a regular space
  cleaned_text = text.replace('\xa0', ' ')

  # Remove duplicate spaces
  cleaned_text = re.sub(r'\s+', ' ', cleaned_text) 

  return cleaned_text


def extract_label_value_pairs(html_content):
  """Extracts label-value pairs from the HTML content.

  Args:
    html_content: The HTML content to analyze.

  Returns:
    A dictionary where keys are labels and values are corresponding values.
  """

  soup = BeautifulSoup(html_content, 'html.parser')

  # Find all rows with a 'FicheRubrique' and a following 'FicheTexte'
  rows = soup.find_all('tr')
  data = {}
  for row in rows:
    label_cell = row.find('td', class_='FicheRubrique')
    value_cell = row.find('td', class_='FicheTexte')

    if label_cell and value_cell:
      label = label_cell.find('span').text.strip()
      value = value_cell.text.strip()
      data[clean_corrupted_text(label)] = clean_corrupted_text(value)

  return data



def extract_module_codes(html_content):
    soup = BeautifulSoup(html_content, 'html.parser')
    module_codes = []

    # More robust way to find the elements, avoiding assumptions about row order:
    for link in soup.find_all('a', id=lambda x: x and x.startswith('ctl00_ContentPlaceHolder1_ListeModules_gridModules_ctl') and x.endswith('_linkCode')):
        module_codes.append(link.text.strip())  # Extract text and remove whitespace

    return module_codes




def get_all_course_code():
  client = httpx.Client()

  init_response = client.get(f"https://gede.enpc.fr/Programme/Default.aspx")
  init_response.raise_for_status()

  cookies = init_response.cookies
  my_cookies = dict(cookies).copy()

  eventarg = ""

  eventtarget = ""

  liste_code = []

  for i in range(6):

    data = {"__EVENTTARGET" : eventtarget,
            "__EVENTARGUMENT" : eventarg,
            "__VIEWSTATE" : viewstate[i],
            "__EVENTVALIDATION" : eventvalidation[i]}
    page = client.post("https://gede.enpc.fr/Programme/Liste.aspx", data = data,cookies = my_cookies).text
    liste_code += extract_module_codes(page)
  return liste_code



def create_json_file(data_dict, name):
    # Create the 'data' directory if it doesn't exist
    data_dir = 'data'
    if not os.path.exists(data_dir):
        os.makedirs(data_dir)

    # Create the full file path
    file_path = os.path.join(data_dir, f"{name}.json")

    try:
        with open(file_path, 'w', encoding='utf-8') as f:  # Use utf-8 for broader character support
            json.dump(data_dict, f, indent=4, ensure_ascii=False) # indent for pretty printing, ensure_ascii for non-ascii chars
        print(f"JSON file '{file_path}' created successfully.")
    except Exception as e:
        print(f"Error creating JSON file: {e}")



def course_info(code):
    page = get_module_info(code)
    return extract_label_value_pairs(page)

def main():
    liste_module = get_all_course_code()
    for mod in liste_module:
      data = extract_label_value_pairs(get_module_info(mod))
      create_json_file(data, mod)

main()
